# Tony
# December 19, 2018
# CVE-2018-15465
#
# 
#
# Script will identify if ASA MGMT has HTTP enabled.
# Script will also check the ASA version. [Version 9.4.(4) -]
#
# Vulnerability in exposing Running-Config to malicious users 
# Vulnerability in having malicious actors overwrite IOS.
#
# Script will open file read IP
# Script will build a socket 
# Connect to all IP within txt file
# Run command specfied
# Store Output
# Create a file with output on desktp


import paramiko
import getpass
import io
import os
import time
import xlsxwriter

# *****Open Plain Text
f = open ("ciscoasa_Inventory.txt")

# *****Read & Store into Variable
ip =(f.read().splitlines())
f.close()

# *****Username Credentials
username = raw_input("Please Enter Username:")

# *****Password Options
password = getpass.getpass("Please Enter Password:")

mylist=[]

#Creating Paramiko Client
client=paramiko.SSHClient()
def connect_ssh(ip):
    try:
        #Key Managment, Exception, and Build Connections
        client.load_system_host_keys()
        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        client.connect(ip, 22, username,password,look_for_keys=False, allow_agent=False)
        
        #Print Statement Displays Current Connection Status
        print 'Connection Attempting to: '+(ip)

        #Invoke Shell Paramiko Object for Multiple Commands
        channel = client.get_transport().open_session()
        channel.invoke_shell()

        # ***** Attempts to Enter Privileged EXEC
        channel.sendall("enable"+"\n")
        output = (channel.recv(1024))

        # ***** Authenticate into Privileged EXEC
        channel.sendall((password)+"\n")
        channel.sendall("\n")
        output = (channel.recv(1024))



        # ***** CMD[1] ****
        channel.sendall("show running-config http"+"\n")
        time.sleep(1)
        CMD1 = (channel.recv(65000))
        print (CMD1)


        # ***** CMD[2] ****
        channel.sendall("show version | include Version"+"\n")
        time.sleep(1)
        CMD2 = (channel.recv(65000))
        print (CMD2)


        # ***** CMD[3] ****
        #channel.sendall("show run | i webvpn"+"\n")
        #time.sleep(1)
        #CMD3 = (channel.recv(65000))
        #print (CMD3)


        # **** Store Values into Array ****
        mylist=[CMD1, CMD2]
        #print (mylist)


       # ***** Create File & Write Bianry to the File *****
        with io.FileIO("CVE-2018-15465.txt", "a") as file:
            file.write(mylist)
    
    

    except Exception, e:
        print '*** Caught exception: %s: %s' % (e.__class__, e)
    try:
        channel.close()
        client.close()
    except:
        pass


# *****Create Loop through input.txt 
for i in ip:
        print connect_ssh(i)

